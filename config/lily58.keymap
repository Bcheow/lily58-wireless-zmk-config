/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Base";
            bindings = <
&kp ESC          &kp N1  &kp N2  &kp N3        &kp N4        &kp N5                          &kp N6  &kp N7           &kp N8      &kp N9   &kp N0    &kp BACKSPACE
&kp TAB         &kp Q   &kp W   &kp E         &kp R         &kp T                           &kp Y   &kp U            &kp I       &kp O    &kp P     &kp DEL
&kp LEFT_SHIFT  &kp A   &kp S   &kp D         &kp F         &kp G                           &kp H   &kp J            &kp K       &kp L    &kp SEMI  &kp SQT
&kp LCTRL       &kp Z   &kp X   &kp C         &kp V         &kp B   &kp MINUS    &kp EQUAL  &kp N   &kp M            &kp COMMA   &kp DOT  &kp FSLH  &kp CAPS
                                &kp LEFT_WIN  &kp LEFT_ALT  &kp SPACE    &mo 1   &mo 2   &kp RET    &kp GRAVE          &kp PRINTSCREEN
            >;
        };

        layer_1 {
            bindings = <
&kp GRAVE    &kp F1  &kp F2    &kp F3    &kp F4     &kp F5                      &kp F6  &kp F7    &kp F8     &kp F9    &kp F10   &kp DEL
&trans    &trans  &kp UP    &trans    &trans     &trans                      &trans  &trans    &kp PG_UP  &trans    &trans    &trans
&trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans                      &trans  &kp HOME  &kp PG_DN  &kp END   &trans    &trans
&trans    &trans  &trans    &trans    &trans     &trans  &kp F11    &kp F12  &trans  &trans    &kp LBKT   &kp RBKT  &kp BSLH  &trans
                            &trans    &trans     &trans  &trans     &tog 3   &trans  &kp INS   &trans
            >;
        };

        layer_2 {
            bindings = <
&kp TILDE        &kp F1  &kp F2    &kp F3    &kp F4     &kp F5                      &kp F6  &kp F7    &kp F8          &kp F9           &kp F10   &kp INS
&trans        &trans  &kp UP    &trans    &trans     &trans                      &trans  &trans    &kp PG_UP       &trans           &trans    &trans
&kp CAPSLOCK  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans                      &trans  &kp HOME  &kp PG_DN       &kp END          &trans    &trans
&trans        &trans  &trans    &trans    &trans     &trans  &kp F11    &kp F12  &trans  &trans    &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp PIPE  &trans
                                &trans    &trans     &trans  &tog 3     &trans   &trans  &kp INS    &trans
            >;
        };

        layer_3 {
            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans  &kp N7  &kp N8  &kp N9   &trans  &kp BSPC
&trans          &trans        &trans        &trans        &trans        &trans                          &trans  &kp N4  &kp N5  &kp N6   &trans  &trans
&trans          &trans        &trans        &trans        &trans        &trans                          &trans  &kp N1  &kp N2  &kp N3   &trans  &trans
&trans          &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &kp N0  &trans  &kp DOT  &trans  &kp RET
                                            &trans        &trans        &trans        &tog 3    &tog 3  &trans  &trans  &trans
            >;
        };
    };
};
